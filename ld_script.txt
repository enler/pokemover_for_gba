SECTIONS {
    . = 0x02000000;
    __begin__ = .;
    .text :
    ALIGN(4)
    {
        src/crt0.o(.text);
        src/libagbsyscall.o(.text);
        src/*.o(.text);
        gflib.a:agb_flash.o(.text.FlashTimerIntr);
        gflib.a:agb_flash.o(.text.ProgramFlashSectorAndVerify);
        gflib.a:agb_flash.o(.text.ReadFlash_Core);
        gflib.a:agb_flash.o(.text.ReadFlash);
        gflib.a:agb_flash.o(.text.ReadFlashId);
        gflib.a:agb_flash.o(.text.SetFlashTimerIntr);
        gflib.a:agb_flash.o(.text.ReadFlash1);
        gflib.a:agb_flash.o(.text.SetReadFlash1);
        gflib.a:agb_flash.o(.text.StartFlashTimer);
        gflib.a:agb_flash.o(.text.StopFlashTimer);
        gflib.a:agb_flash.o(.text.SwitchFlashBank);
        gflib.a:agb_flash.o(.text.VerifyFlashSector_Core);
        gflib.a:agb_flash.o(.text.VerifyFlashSector);
        gflib.a:agb_flash_1m.o(.text.*);
        gflib.a:agb_flash_mx.o(.text.*);
        gflib.a:bg.o(.text.BgTileAllocOp);
        gflib.a:bg.o(.text.ChangeBgX);
        gflib.a:bg.o(.text.ChangeBgY);
        gflib.a:bg.o(.text.CopyBgTilemapBufferToVram);
        gflib.a:bg.o(.text.CopyRectToBgTilemapBufferRect);
        gflib.a:bg.o(.text.CopyTileMapEntry);
        gflib.a:bg.o(.text.CopyToBgTilemapBufferRect);
        gflib.a:bg.o(.text.FillBgTilemapBufferRect);
        gflib.a:bg.o(.text.GetBgAttribute);
        gflib.a:bg.o(.text.GetBgControlAttribute);
        gflib.a:bg.o(.text.GetBgMetricAffineMode);
        gflib.a:bg.o(.text.GetBgMetricTextMode);
        gflib.a:bg.o(.text.GetBgTilemapBuffer);
        gflib.a:bg.o(.text.GetBgType);
        gflib.a:bg.o(.text.GetTileMapIndexFromCoords);
        gflib.a:bg.o(.text.HideBg);
        gflib.a:bg.o(.text.HideBgInternal);
        gflib.a:bg.o(.text.InitBgsFromTemplates);
        gflib.a:bg.o(.text.IsDma3ManagerBusyWithBgCopy);
        gflib.a:bg.o(.text.IsTileMapOutsideWram);
        gflib.a:bg.o(.text.LoadBgTilemap);
        gflib.a:bg.o(.text.LoadBgTiles);
        gflib.a:bg.o(.text.LoadBgVram);
        gflib.a:bg.o(.text.ResetBgControlStructs);
        gflib.a:bg.o(.text.ResetBgs);
        gflib.a:bg.o(.text.ResetBgsAndClearDma3BusyFlags);
        gflib.a:bg.o(.text.SetBgControlAttributes);
        gflib.a:bg.o(.text.SetBgModeInternal);
        gflib.a:bg.o(.text.SetBgTilemapBuffer);
        gflib.a:bg.o(.text.SetTextModeAndHideBgs);
        gflib.a:bg.o(.text.ShowBg);
        gflib.a:bg.o(.text.ShowBgInternal);
        gflib.a:bg.o(.text.SyncBgVisibilityAndMode);
        gflib.a:bg.o(.text.WriteSequenceToBgTilemapBuffer);
        gflib.a:blit.o(.text.BlitBitmapRect4Bit);
        gflib.a:blit.o(.text.FillBitmapRect4Bit);
        gflib.a:dma3_manager.o(.text.CheckForSpaceForDma3Request);
        gflib.a:dma3_manager.o(.text.ClearDma3Requests)
        gflib.a:dma3_manager.o(.text.ProcessDma3Requests)
        gflib.a:dma3_manager.o(.text.RequestDma3Copy);
        gflib.a:dynamic_placeholder_text_util.o(.text.DynamicPlaceholderTextUtil_GetPlaceholderPtr);
        gflib.a:gpu_regs.o(.text.CopyBufferedValueToGpuReg);
        gflib.a:gpu_regs.o(.text.CopyBufferedValuesToGpuRegs);
        gflib.a:gpu_regs.o(.text.DisableInterrupts)
        gflib.a:gpu_regs.o(.text.EnableInterrupts)
        gflib.a:gpu_regs.o(.text.GetGpuReg);
        gflib.a:gpu_regs.o(.text.InitGpuRegManager)
        gflib.a:gpu_regs.o(.text.SetGpuReg);
        gflib.a:gpu_regs.o(.text.SyncRegIE);
        gflib.a:gpu_regs.o(.text.UpdateRegDispstatIntrBits);
        gflib.a:international_string_util.o(.text.GetMaxWidthInMenuTable)
        gflib.a:load_save.o(.text.CheckForFlashMemory)
        gflib.a:malloc.o(.text.Alloc);
        gflib.a:malloc.o(.text.AllocInternal);
        gflib.a:malloc.o(.text.AllocZeroed);
        gflib.a:malloc.o(.text.AllocZeroedInternal);
        gflib.a:malloc.o(.text.Free);
        gflib.a:malloc.o(.text.FreeInternal);
        gflib.a:malloc.o(.text.InitHeap);
        gflib.a:malloc.o(.text.PutFirstMemBlockHeader);
        gflib.a:menu.o(.text.ClearDialogWindowAndFrame);
        gflib.a:menu.o(.text.ClearScheduledBgCopiesToVram);
        gflib.a:menu.o(.text.ClearStdWindowAndFrame);
        gflib.a:menu.o(.text.ClearStdWindowAndFrameToTransparent);
        gflib.a:menu.o(.text.CreateYesNoMenu);
        gflib.a:menu.o(.text.DecompressAndCopyTileDataToVram);
        gflib.a:menu.o(.text.DecompressAndLoadBgGfxUsingHeap);
        gflib.a:menu.o(.text.DoScheduledBgTilemapCopiesToVram);
        gflib.a:menu.o(.text.DrawDialogueFrame);
        gflib.a:menu.o(.text.DrawStdFrameWithCustomTileAndPalette);
        gflib.a:menu.o(.text.DrawStdWindowFrame);
        gflib.a:menu.o(.text.EraseYesNoWindow)
        gflib.a:menu.o(.text.FreeTempTileDataBuffersIfPossible);
        gflib.a:menu.o(.text.InitMenu)
        gflib.a:menu.o(.text.InitMenuInUpperLeftCorner);
        gflib.a:menu.o(.text.InitMenuInUpperLeftCornerNormal)
        gflib.a:menu.o(.text.InitMenuNormal);
        gflib.a:menu.o(.text.InitStandardTextBoxWindows);
        gflib.a:menu.o(.text.InitTextBoxGfxAndPrinters);
        gflib.a:menu.o(.text.LoadMessageBoxAndBorderGfx)
        gflib.a:menu.o(.text.Menu_MoveCursor)
        gflib.a:menu.o(.text.Menu_MoveCursorNoWrapAround);
        gflib.a:menu.o(.text.Menu_ProcessInput);
        gflib.a:menu.o(.text.Menu_ProcessInputNoWrap)
        gflib.a:menu.o(.text.Menu_ProcessInputNoWrapClearOnChoose);
        gflib.a:menu.o(.text.PrintMenuTable);
        gflib.a:menu.o(.text.RedrawMenuCursor);
        gflib.a:menu.o(.text.ScheduleBgCopyTilemapToVram);
        gflib.a:menu.o(.text.WindowFunc_ClearDialogWindowAndFrame)
        gflib.a:menu.o(.text.WindowFunc_ClearStdWindowAndFrame)
        gflib.a:menu.o(.text.WindowFunc_ClearStdWindowAndFrameToTransparent)
        gflib.a:menu.o(.text.WindowFunc_DrawDialogueFrame)
        gflib.a:menu.o(.text.WindowFunc_DrawStandardFrame)
        gflib.a:menu.o(.text.WindowFunc_DrawStdFrameWithCustomTileAndPalette)
        gflib.a:menu.o(.text.copy_decompressed_tile_data_to_vram)
        gflib.a:menu.o(.text.malloc_and_decompress)
        gflib.a:menu.o(.text.task_free_buf_after_copying_tile_data_to_vram)
        gflib.a:menu_helpers.o(.text.ResetAllBgsCoordinates);
        gflib.a:menu_helpers.o(.text.SetVBlankHBlankCallbacksToNull);
        gflib.a:pokedex.o(.text.GetSetPokedexFlag);
        gflib.a:pokemon.o(.text.BoxMonRestorePP);
        gflib.a:pokemon.o(.text.CalculateBoxMonChecksum);
        gflib.a:pokemon.o(.text.CalculatePPWithBonus);
        gflib.a:pokemon.o(.text.DecryptBoxMon);
        gflib.a:pokemon.o(.text.DeleteFirstMoveAndGiveMoveToBoxMon);
        gflib.a:pokemon.o(.text.EncryptBoxMon);
        gflib.a:pokemon.o(.text.GetBoxMonData3);
        gflib.a:pokemon.o(.text.GetLevelFromBoxMonExp);
        gflib.a:pokemon.o(.text.GetSubstruct);
        gflib.a:pokemon.o(.text.GiveBoxMonInitialMoveset);
        gflib.a:pokemon.o(.text.GiveMoveToBoxMon);
        gflib.a:pokemon.o(.text.HandleSetPokedexFlag);
        gflib.a:pokemon.o(.text.NationalPokedexNumToSpecies);
        gflib.a:pokemon.o(.text.SetBoxMonData);
        gflib.a:pokemon.o(.text.SpeciesToNationalPokedexNum);
        gflib.a:pokemon.o(.text.ZeroBoxMonData);
        gflib.a:pokemon_icon.o(.text.GetIconSpecies);
        gflib.a:pokemon_icon.o(.text.GetMonIconTiles);
        gflib.a:pokemon_icon.o(.text.GetUnownLetterByPersonality);
        gflib.a:pokemon_icon.o(.text.LoadMonIconPalettes);
        gflib.a:pokemon_storage_system.o(.text.DrawTextWindowAndBufferTiles);
        gflib.a:pokemon_storage_system.o(.text.GetWaldaWallpaperIconId);
        gflib.a:pokemon_storage_system.o(.text.GetWaldaWallpaperPatternId);
        gflib.a:pokemon_storage_system.o(.text.ZeroBoxMonAt);
        gflib.a:random.o(.text.Random)
        gflib.a:save.o(.text.CalculateChecksum);
        gflib.a:save.o(.text.CopySaveSlotData);
        gflib.a:save.o(.text.CopySectorSignatureByte);
        gflib.a:save.o(.text.GetSaveValidStatus);
        gflib.a:save.o(.text.HandleReplaceSector);
        gflib.a:save.o(.text.HandleReplaceSectorAndVerify);
        gflib.a:save.o(.text.HandleWriteIncrementalSector);
        gflib.a:save.o(.text.HandleWriteSector);
        gflib.a:save.o(.text.LinkFullSave_Init);
        gflib.a:save.o(.text.LinkFullSave_ReplaceLastSector);
        gflib.a:save.o(.text.LinkFullSave_SetLastSectorSignature);
        gflib.a:save.o(.text.LinkFullSave_WriteSector);
        gflib.a:save.o(.text.LoadGameSave);
        gflib.a:save.o(.text.ReadFlashSector);
        gflib.a:save.o(.text.RestoreSaveBackupVarsAndIncrement);
        gflib.a:save.o(.text.Save_ResetSaveCounters);
        gflib.a:save.o(.text.SetDamagedSectorBits);
        gflib.a:save.o(.text.TryWriteSector);
        gflib.a:save.o(.text.UpdateSaveAddresses);
        gflib.a:script_menu.o(.text.ConvertPixelWidthToTileWidth);
        gflib.a:sprite.o(.text.AddSpriteToOamBuffer);
        gflib.a:sprite.o(.text.AddSpritesToOamBuffer);
        gflib.a:sprite.o(.text.AddSubspritesToOamBuffer);
        gflib.a:sprite.o(.text.AffineAnimStateReset);
        gflib.a:sprite.o(.text.AllocOamMatrix);
        gflib.a:sprite.o(.text.AllocSpriteTiles);
        gflib.a:sprite.o(.text.BuildOamBuffer);
        gflib.a:sprite.o(.text.BuildSpritePriorities);
        gflib.a:sprite.o(.text.CalcCenterToCornerVec);
        gflib.a:sprite.o(.text.ClearSpriteCopyRequests);
        gflib.a:sprite.o(.text.CopyMatricesToOamBuffer);
        gflib.a:sprite.o(.text.CreateSprite);
        gflib.a:sprite.o(.text.CreateSpriteAt);
        gflib.a:sprite.o(.text.DestroySprite);
        gflib.a:sprite.o(.text.DoLoadSpritePalette);
        gflib.a:sprite.o(.text.FreeAllSpritePalettes);
        gflib.a:sprite.o(.text.FreeSpriteTileRanges);
        gflib.a:sprite.o(.text.GetSpriteTileStartByTag);
        gflib.a:sprite.o(.text.IndexOfSpritePaletteTag);
        gflib.a:sprite.o(.text.IndexOfSpriteTileTag);
        gflib.a:sprite.o(.text.InitSpriteAffineAnim);
        gflib.a:sprite.o(.text.LoadOam);
        gflib.a:sprite.o(.text.LoadSpritePalette);
        gflib.a:sprite.o(.text.ProcessSpriteCopyRequests);
        gflib.a:sprite.o(.text.ResetAffineAnimData);
        gflib.a:sprite.o(.text.ResetAllSprites);
        gflib.a:sprite.o(.text.ResetOamMatrices);
        gflib.a:sprite.o(.text.ResetOamRange);
        gflib.a:sprite.o(.text.ResetSprite);
        gflib.a:sprite.o(.text.ResetSpriteData);
        gflib.a:sprite.o(.text.SetSpriteSheetFrameTileNum);
        gflib.a:sprite.o(.text.SortSprites);
        gflib.a:sprite.o(.text.SpriteCallbackDummy);
        gflib.a:sprite.o(.text.UpdateOamCoords);
        gflib.a:string_util.o(.text.ConvertIntToDecimalStringN);
        gflib.a:string_util.o(.text.ExpandPlaceholder_StringVar1);
        gflib.a:string_util.o(.text.ExpandPlaceholder_StringVar2);
        gflib.a:string_util.o(.text.ExpandPlaceholder_StringVar3);
        gflib.a:string_util.o(.text.GetExpandedPlaceholder);
        gflib.a:string_util.o(.text.StringCopy);
        gflib.a:string_util.o(.text.StringCopyN);
        gflib.a:string_util.o(.text.StringExpandPlaceholders);
        gflib.a:string_util.o(.text.StringLength)
        gflib.a:task.o(.text.CreateTask);
        gflib.a:task.o(.text.DestroyTask);
        gflib.a:task.o(.text.FindFirstActiveTask);
        gflib.a:task.o(.text.GetWordTaskArg);
        gflib.a:task.o(.text.InsertTask);
        gflib.a:task.o(.text.ResetTasks);
        gflib.a:task.o(.text.RunTasks);
        gflib.a:task.o(.text.SetWordTaskArg);
        gflib.a:task.o(.text.TaskDummy);
        gflib.a:text_window.o(.text.LoadMessageBoxGfx)
        gflib.a:text_window.o(.text.LoadUserWindowBorderGfx)
        gflib.a:text_window.o(.text.LoadWindowGfx)
        gflib.a:window.o(.text.AddWindow);
        gflib.a:window.o(.text.BlitBitmapRectToWindow);
        gflib.a:window.o(.text.CallWindowFunction)
        gflib.a:window.o(.text.ClearWindowTilemap);
        gflib.a:window.o(.text.CopyWindowToVram);
        gflib.a:window.o(.text.DummyWindowBgTilemap);
        gflib.a:window.o(.text.FillWindowPixelBuffer);
        gflib.a:window.o(.text.FillWindowPixelRect);
        gflib.a:window.o(.text.FreeAllWindowBuffers);
        gflib.a:window.o(.text.GetNumActiveWindowsOnBg);
        gflib.a:window.o(.text.GetWindowAttribute)
        gflib.a:window.o(.text.InitWindows)
        gflib.a:window.o(.text.PutWindowTilemap);
        gflib.a:window.o(.text.RemoveWindow);
        gflib.a:window.o(.text.ScrollWindow);
        *libc.a:libc_a-memcpy.o(.text.memcpy);
        *libc.a:libc_a-memcpy-stub.o(.text.memcpy);
        *libc.a:libc_a-memset.o(.text.memset);
        *libgcc.a:_udivsi3.o(.text);
        *libgcc.a:_umodsi3.o(.text);
        *libgcc.a:_divsi3.o(.text)
        *libgcc.a:_modsi3.o(.text);
        *libgcc.a:_dvmd_tls.o(.text);
        *libgcc.a:_thumb1_case_shi.o(.text);
        *libgcc.a:_thumb1_case_sqi.o(.text);
        *libgcc.a:_thumb1_case_uqi.o(.text);
        *libgcc.a:_thumb1_case_uhi.o(.text);
    } =0

    .rodata :
    ALIGN(4)
    {
        src/*.o(.rodata*);
        data/*.o(.rodata);
        . = ALIGN(4);
        gflib.a:agb_flash_1m.o(.rodata.AgbLibFlashVersion);
        gflib.a:agb_flash_1m.o(.rodata.sSetupInfos);
        gflib.a:agb_flash_mx.o(.rodata.mxMaxTime);
        gflib.a:agb_flash_mx.o(.rodata.MX29L010);
        gflib.a:agb_flash_mx.o(.rodata.DefaultFlash);
        gflib.a:agb_flash_le.o(.rodata.leMaxTime);
        gflib.a:agb_flash_le.o(.rodata.LE26FV10N1TS);
        gflib.a:bg.o(.rodata.CSWTCH.75);
        gflib.a:data.o(.rodata.gMoveNames);
        gflib.a:data.o(.rodata.gText_BadEgg)
        . = ALIGN(4);
        gflib.a:graphics.o(.rodata.gMessageBox_Gfx);
        gflib.a:graphics.o(.rodata.gMessageBox_Pal);
        gflib.a:menu.o(.rodata.sStandardTextBox_WindowTemplates);
        gflib.a:pokemon.o(.rodata.gPPUpGetMask);
        gflib.a:pokemon.o(.rodata.sSpeciesToNationalPokedexNum);
        gflib.a:pokemon_storage_system.o(.rodata.sAnim_BoxTitle_Left);
        gflib.a:pokemon_storage_system.o(.rodata.sAnim_BoxTitle_Right);
        gflib.a:pokemon_storage_system.o(.rodata.sAnims_BoxTitle);
        gflib.a:pokemon_storage_system.o(.rodata.sOamData_BoxTitle);
        gflib.a:pokemon_storage_system.o(.rodata.sOamData_MonIcon);
        gflib.a:pokemon_storage_system.o(.rodata.sScrollingBg_Gfx);
        gflib.a:pokemon_storage_system.o(.rodata.sScrollingBg_Pal);
        gflib.a:pokemon_storage_system.o(.rodata.sScrollingBg_Tilemap);
        gflib.a:pokemon_storage_system.o(.rodata.sSpriteTemplate_BoxTitle);
        gflib.a:pokemon_storage_system.o(.rodata.sSpriteTemplate_MonIcon);
        gflib.a:sprite.o(.rodata.gDummyOamData);
        gflib.a:sprite.o(.rodata.gDummySpriteAffineAnimTable);
        gflib.a:sprite.o(.rodata.gDummySpriteAnimTable);
        gflib.a:sprite.o(.rodata.gDummySpriteTemplate);
        gflib.a:sprite.o(.rodata.sCenterToCornerVecTable);
        gflib.a:sprite.o(.rodata.sDummyAffineAnim);
        gflib.a:sprite.o(.rodata.sDummyAnim);
        gflib.a:sprite.o(.rodata.sOamDimensions);
        gflib.a:string_util.o(.rodata.funcs.1);
        gflib.a:string_util.o(.rodata.sDigits);
        gflib.a:string_util.o(.rodata.sPowersOfTen);
        gflib.a:strings.o(.rodata.gText_Box);
        gflib.a:strings.o(.rodata.gText_EggNickname);
        gflib.a:strings.o(.rodata.gText_ExpandedPlaceholder_Empty);
        gflib.a:strings.o(.rodata.gText_SelectorArrow3);
        gflib.a:strings.o(.rodata.gText_TrainerCardIDNo);
        gflib.a:strings.o(.rodata.gText_YesNo);
        . = ALIGN(4);
        gflib.a:text_window.o(.rodata.sTextWindowFrame2_Gfx);
        gflib.a:text_window.o(.rodata.sTextWindowFrame2_Pal);
        gflib.a:util.o(.rodata.gBitTable);
    } =0

    .data ALIGN(4):
    {
        src/*.o(.data);
        gflib/*.o(.data);
        gflib.a:save.o(.data.sSaveSlotLayout);
        __data_end__ = .;
    } =0

    . = ALIGN(4);
    gHeap = .;
    . = 0x2040000;
    gHeapEnd = .;

	. = 0x3000000;
    bss_start = .;
    .bss :
    ALIGN(4)
    {
        src/*.o(.bss);
        gflib.a:agb_flash.o(.bss.EraseFlashChip);
        gflib.a:agb_flash.o(.bss.EraseFlashSector);
        gflib.a:agb_flash.o(.bss.PollFlashStatus);
        gflib.a:agb_flash.o(.bss.ProgramFlashByte);
        gflib.a:agb_flash.o(.bss.ProgramFlashSector);
        gflib.a:agb_flash.o(.bss.WaitForFlashWrite);
        gflib.a:agb_flash.o(.bss.gFlash);
        gflib.a:agb_flash.o(.bss.gFlashNumRemainingBytes);
        gflib.a:agb_flash.o(.bss.gFlashMaxTime);
        gflib.a:agb_flash.o(.bss.gFlashTimeoutFlag);
        gflib.a:agb_flash.o(.bss.sTimerCount);
        gflib.a:agb_flash.o(.bss.sTimerNum);
        gflib.a:agb_flash.o(.bss.sTimerReg);
        gflib.a:agb_flash.o(.bss.sSavedIme);
        gflib.a:bg.o(.bss.gWindowTileAutoAllocEnabled);
        gflib.a:bg.o(.bss.sDmaBusyBitfield);
        gflib.a:bg.o(.bss.sGpuBgConfigs);
        gflib.a:bg.o(.bss.sGpuBgConfigs2);
        gflib.a:dma3_manager.o(.bss.sDma3ManagerLocked);
        gflib.a:dma3_manager.o(.bss.sDma3RequestCursor);
        gflib.a:dma3_manager.o(.bss.sDma3Requests);
        gflib.a:dynamic_placeholder_text_util.o(.bss.sStringPointers);
        gflib.a:gpu_regs.o(.bss.sGpuRegBuffer);
        gflib.a:gpu_regs.o(.bss.sGpuRegBufferLocked);
        gflib.a:gpu_regs.o(.bss.sGpuRegWaitingList);
        gflib.a:gpu_regs.o(.bss.sRegIE);
        gflib.a:gpu_regs.o(.bss.sShouldSyncRegIE);
        gflib.a:load_save.o(.bss.gFlashMemoryPresent);
        gflib.a:load_save.o(.bss.gPokemonStoragePtr);
        gflib.a:load_save.o(.bss.gSaveBlock1Ptr);
        gflib.a:load_save.o(.bss.gSaveBlock2Ptr);
        gflib.a:malloc.o(.bss.sHeapStart);
        gflib.a:malloc.o(.bss.sHeapSize);
        gflib.a:menu.o(.bss.sMapNamePopupWindowId);
        gflib.a:menu.o(.bss.sMenu);
        gflib.a:menu.o(.bss.sPaletteNum);
        gflib.a:menu.o(.bss.sScheduledBgCopiesToVram);
        gflib.a:menu.o(.bss.sStartMenuWindowId);
        gflib.a:menu.o(.bss.sTempTileDataBuffer);
        gflib.a:menu.o(.bss.sTempTileDataBufferIdx);
        gflib.a:menu.o(.bss.sTileNum);
        gflib.a:menu.o(.bss.sYesNoWindowId);
        gflib.a:random.o(.bss.gRngValue);
        gflib.a:random.o(.bss.sRandCount);
        gflib.a:save.o(.bss.gGameContinueCallback);
        gflib.a:save.o(.bss.gDamagedSaveSectors);
        gflib.a:save.o(.bss.gIncrementalSectorId);
        gflib.a:save.o(.bss.gLastKnownGoodSector);
        gflib.a:save.o(.bss.gLastSaveCounter);
        gflib.a:save.o(.bss.gLastWrittenSector);
        gflib.a:save.o(.bss.gRamSaveSectorLocations);
        gflib.a:save.o(.bss.gReadWriteSector);
        gflib.a:save.o(.bss.gSaveCounter);
        gflib.a:save.o(.bss.gSaveDataBuffer);
        gflib.a:save.o(.bss.gSaveFileStatus);
        gflib.a:sprite.o(.bss.gAffineAnimsDisabled);
        gflib.a:sprite.o(.bss.gOamLimit);
        gflib.a:sprite.o(.bss.gOamMatrices);
        gflib.a:sprite.o(.bss.gOamMatrixAllocBitmap);
        gflib.a:sprite.o(.bss.gReservedSpritePaletteCount);
        gflib.a:sprite.o(.bss.gReservedSpriteTileCount);
        gflib.a:sprite.o(.bss.gSpriteCoordOffsetX);
        gflib.a:sprite.o(.bss.gSpriteCoordOffsetY);
        gflib.a:sprite.o(.bss.gSprites);
        gflib.a:sprite.o(.bss.sAffineAnimStates);
        gflib.a:sprite.o(.bss.sShouldProcessSpriteCopyRequests);
        gflib.a:sprite.o(.bss.sSpriteCopyRequestCount);
        gflib.a:sprite.o(.bss.sSpriteCopyRequests);
        gflib.a:sprite.o(.bss.sSpriteOrder);
        gflib.a:sprite.o(.bss.sSpritePaletteTags);
        gflib.a:sprite.o(.bss.sSpritePriorities);
        gflib.a:sprite.o(.bss.sSpriteTileAllocBitmap);
        gflib.a:sprite.o(.bss.sSpriteTileRangeTags);
        gflib.a:sprite.o(.bss.sSpriteTileRanges);
        gflib.a:string_util.o(.bss.gStringVar1);
        gflib.a:string_util.o(.bss.gStringVar2);
        gflib.a:string_util.o(.bss.gStringVar3);
        gflib.a:task.o(.bss.gTasks);
        gflib.a:window.o(.bss.gTransparentTileNumber);
        gflib.a:window.o(.bss.gWindowBgTilemapBuffers);
        gflib.a:window.o(.bss.gWindows);
    }
    bss_end = .;

    . = __data_end__ ;
    . = ALIGN(16);
    __vram_font_orig__ = .;
    . = 0x6007800;
    .vramfont ALIGN(4):
    AT (__vram_font_orig__)
    {
        __vram_font_start__ = .;
        src/text_ext.o(.vramfont);
        __vram_font_end__ = .;
    } =0

    __end__ = __vram_font_orig__ + SIZEOF(.vramfont);

    /DISCARD/ :
    {
        *(*);
    }
}
